<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="https://malsf21.github.io/easy-jekyll-starter/easy-jekyll-starter/feed.xml" rel="self" type="application/atom+xml" /><link href="https://malsf21.github.io/easy-jekyll-starter/easy-jekyll-starter/" rel="alternate" type="text/html" /><updated>2022-12-08T04:55:51+00:00</updated><id>https://malsf21.github.io/easy-jekyll-starter/easy-jekyll-starter/feed.xml</id><title type="html">Easy Jekyll Starter</title><subtitle>ðŸ§ªA (lightly) opinionated Jekyll starter designed to replace jekyll new. Ejects minima out of its gem theme, adds template code for Travis CI build, test, and deploy.</subtitle><entry><title type="html">Easy Jekyll Starter - What and Why?</title><link href="https://malsf21.github.io/easy-jekyll-starter/easy-jekyll-starter/jekyll/update/2019/09/05/easy-jekyll-starter.html" rel="alternate" type="text/html" title="Easy Jekyll Starter - What and Why?" /><published>2019-09-05T23:00:00+00:00</published><updated>2019-09-05T23:00:00+00:00</updated><id>https://malsf21.github.io/easy-jekyll-starter/easy-jekyll-starter/jekyll/update/2019/09/05/easy-jekyll-starter</id><content type="html" xml:base="https://malsf21.github.io/easy-jekyll-starter/easy-jekyll-starter/jekyll/update/2019/09/05/easy-jekyll-starter.html"><![CDATA[<p>Hey, thanks for using this starter template! I guess I should explain why this exists and what it does.</p>

<p>This is a simple template repository for <a href="https://jekyllrb.com">Jekyll</a>. It does two simple things over <code class="language-plaintext highlighter-rouge">jekyll new ...</code>:</p>

<ul>
  <li>by default, ejects <a href="https://github.com/jekyll/minima">minima</a> from its gem wrapper; this makes it easier to see what Jekyll is doing under the hood, and makes it easy to build your own theme</li>
  <li>adds two workflows for GitHub Actions:
    <ol>
      <li>a test action that builds the site on PR/push</li>
      <li>an action to deploy to <a href="https://pages.github.com/">GitHub Pages</a> off of <code class="language-plaintext highlighter-rouge">main</code>. Thanks to <a href="https://github.com/helaili/jekyll-action"><code class="language-plaintext highlighter-rouge">helaili/jekyll-action</code></a>, this works out of the box with no secrets required</li>
    </ol>
  </li>
</ul>

<p>Other than that, I basically leave minima untouched.</p>

<p>Why did I make this simple template? I love using Jekyll, but Iâ€™m not a huge fan of how minima is now bundled by default into <code class="language-plaintext highlighter-rouge">jekyll new ...</code>. Firstly, it obscures some of the logic of what Jekyll is doing (via the minima gem), which makes it harder to introduce Jekyll to my friends. Since this template ejects minima out of its gem, it should be easier to understand how <code class="language-plaintext highlighter-rouge">_includes</code>, <code class="language-plaintext highlighter-rouge">_layouts</code>, and YAML front matter work!</p>

<p>In addition, it becomes a bit of a pain if you want to override some, but not all, of minimaâ€™s defaults. Putting the SASS in <code class="language-plaintext highlighter-rouge">_sass</code> makes it easier to accomplish these kinds of changes.</p>

<p>Finally, I have a few preferences on how I usually run my Jekyll setups: I like using html-proofer to catch egregiously bad HTML (and check for dead links, though itâ€™s a bit inconsistent on that); I like aliasing the longer <code class="language-plaintext highlighter-rouge">bundle exec ...</code> commands to shorter keywords (like <code class="language-plaintext highlighter-rouge">rake build</code>); and, I Like using GitHub Actions to let me know if Iâ€™ve committed a bad build of the site.</p>

<p>Currently, this template uses Jekyll v4.0.0+.</p>

<h2 id="development-setup">Development Setup</h2>

<p>Admittedly, this is a little more annoying to use than <code class="language-plaintext highlighter-rouge">jekyll new ...</code>, but only slightly so.</p>

<p>To use this template, youâ€™ll need to have some sort of Ruby on your system; I recommend that you use <a href="https://rvm.io/">rvm</a>, especially if you work on multiple different Ruby projects. Currently, the Actions build uses Ruby <code class="language-plaintext highlighter-rouge">v2.7.4</code> and <code class="language-plaintext highlighter-rouge">v3.0.2</code> for test, and Ruby <code class="language-plaintext highlighter-rouge">3.0</code> for prod.</p>

<p>If you havenâ€™t already, weâ€™re first going to install <a href="https://bundler.io/">bundler</a>:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gem <span class="nb">install </span>bundler
</code></pre></div></div>

<p>Then, weâ€™ll install all of our dependencies from our <code class="language-plaintext highlighter-rouge">Gemfile</code>.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>bundle
</code></pre></div></div>

<p>Iâ€™ve committed <code class="language-plaintext highlighter-rouge">Gemfile.lock</code>, which specifies what versions of gems to use. If youâ€™d like, you can run <code class="language-plaintext highlighter-rouge">bundle update</code> to update them.</p>

<p>Now, youâ€™re ready to use the site! You can use <code class="language-plaintext highlighter-rouge">bundle exec jekyll serve</code> to serve the site, or <code class="language-plaintext highlighter-rouge">bundle exec jekyll build</code> to build it.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rake serve
bundle <span class="nb">exec </span>jekyll serve
Configuration file: /Users/malsf21/code/easy-jekyll-starter/_config.yml
            Source: /Users/malsf21/code/easy-jekyll-starter
       Destination: /Users/malsf21/code/easy-jekyll-starter/_site
 Incremental build: disabled. Enable with <span class="nt">--incremental</span>
      Generating...
       Jekyll Feed: Generating feed <span class="k">for </span>posts
                    <span class="k">done in </span>0.561 seconds.
 Auto-regeneration: enabled <span class="k">for</span> <span class="s1">'/Users/malsf21/code/easy-jekyll-starter'</span>
    Server address: http://127.0.0.1:4000/easy-jekyll-starter/
  Server running... press ctrl-c to stop.
</code></pre></div></div>

<p>Those commands are a bit of a mouthful, so Iâ€™ve made quick rake shortcuts that will save you a few valuable keystrokes:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rake
<span class="c"># same as running bundle exec jekyll build</span>
<span class="nv">$ </span>rake build
<span class="c"># also same as running bundle exec jekyll build</span>
<span class="nv">$ </span>rake serve
<span class="c"># same as running bundle exec jekyll serve</span>
</code></pre></div></div>

<p>In addition, Iâ€™ve also added html-proofer, which can test the validity of your HTML. You can use it like so:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rake build
...
<span class="nv">$ </span>rake <span class="nb">test
</span>Running <span class="o">[</span><span class="s2">"ScriptCheck"</span>, <span class="s2">"ImageCheck"</span>, <span class="s2">"LinkCheck"</span><span class="o">]</span> on <span class="o">[</span><span class="s2">"./_site"</span><span class="o">]</span> on <span class="k">*</span>.html...
</code></pre></div></div>

<h2 id="actions-and-github-pages">Actions and GitHub Pages</h2>

<p>Deploying off of GitHub Pages is very simple. We consume <a href="https://github.com/helaili/jekyll-action"><code class="language-plaintext highlighter-rouge">helaili/jekyll-action</code></a>, which automatically builds and deploys the site. We donâ€™t need to pass in a specific environment token, as it uses the default <code class="language-plaintext highlighter-rouge">GITHUB_TOKEN</code> env var.</p>

<h2 id="a-bit-of-history">A bit of history</h2>

<p>This template used to use <a href="https://travis-ci.com/">Travis CI</a>, but for numerous reasons, Iâ€™ve decided to switch to GitHub Actions. One huge benefit is that you wonâ€™t have to create a new access token!</p>]]></content><author><name>matt</name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[Hey, thanks for using this starter template! I guess I should explain why this exists and what it does.]]></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="https://malsf21.github.io/easy-jekyll-starter/easy-jekyll-starter/jekyll/update/2019/09/05/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2019-09-05T22:59:07+00:00</published><updated>2019-09-05T22:59:07+00:00</updated><id>https://malsf21.github.io/easy-jekyll-starter/easy-jekyll-starter/jekyll/update/2019/09/05/welcome-to-jekyll</id><content type="html" xml:base="https://malsf21.github.io/easy-jekyll-starter/easy-jekyll-starter/jekyll/update/2019/09/05/welcome-to-jekyll.html"><![CDATA[<p>Youâ€™ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyllâ€™s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[Youâ€™ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry></feed>